(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{595:function(n,s,a){"use strict";a.r(s);var e=a(15),t=Object(e.a)({},(function(){var n=this,s=n.$createElement,a=n._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h1",{attrs:{id:"红黑树"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#红黑树"}},[n._v("#")]),n._v(" 红黑树")]),n._v(" "),a("p",[n._v("红黑树(Red-Black Tree，简称R-B Tree)，它一种特殊的二叉查找树。\n红黑树是特殊的二叉查找树，意味着它满足二叉查找树的特征：任意一个节点所包含的键值，大于等于左孩子的键值，小于等于右孩子的键值。\n除了具备该特性之外，红黑树还包括许多额外的信息。")]),n._v(" "),a("p",[n._v("红黑树的每个节点上都有存储位表示节点的颜色，颜色是红(Red)或黑(Black)。\n红黑树的特性:\n(1) 每个节点或者是黑色，或者是红色。\n(2) 根节点是黑色。\n(3) 每个叶子节点是黑色。 [注意：这里叶子节点，是指为空的叶子节点！]\n(4) 如果一个节点是红色的，则它的子节点必须是黑色的。\n(5) 从一个节点到该节点的子孙节点的所有路径上包含相同数目的黑节点。")]),n._v(" "),a("p",[n._v("关于它的特性，需要注意的是：\n第一，特性(3)中的叶子节点，是只为空(NIL或null)的节点。\n第二，特性(5)，确保没有一条路径会比其他路径长出俩倍。因而，红黑树是相对是接近平衡的二叉树")]),n._v(" "),a("blockquote",[a("p",[n._v("介绍见 hhttps://www.cnblogs.com/skywang12345/p/3624291.html")])]),n._v(" "),a("p",[n._v("最难的部分是remove，需要好好理解。")]),n._v(" "),a("p",[n._v("这里是先delete后修复。还有一种是先修复，后delete，需要区分。")]),n._v(" "),a("p",[n._v("delete的时候因为不需要考虑是否平衡所以，在delele双子节点的情况下，不需要考虑用前驱节点代替还是后继节点代替。统一用一个就好。一般使用后继节点。")]),n._v(" "),a("p",[n._v("这里说一下链表实现。")]),n._v(" "),a("div",{staticClass:"language-c++ line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('/**\n * C++ 语言: 红黑树\n *\n * @author skywang\n * @date 2013/11/07\n */\n\n#ifndef _RED_BLACK_TREE_HPP_\n#define _RED_BLACK_TREE_HPP_\n\n#include <iomanip>\n#include <iostream>\nusing namespace std;\n\nenum RBTColor { RED, BLACK };\n\ntemplate <class T>\nclass RBTNode {\npublic:\n    RBTColor color;    // 颜色\n    T key;            // 关键字(键值)\n    RBTNode* left;    // 左孩子\n    RBTNode* right;    // 右孩子\n    RBTNode* parent; // 父结点\n\n    RBTNode(T value, RBTColor c, RBTNode* p, RBTNode* l, RBTNode* r) :\n        key(value), color(c), parent(), left(l), right(r) {}\n    ~RBTNode()\n    {\n        cout << "delete : " << key << endl;\n    }\n};\n\ntemplate <class T>\nclass RBTree {\nprivate:\n    RBTNode<T>* mRoot;    // 根结点\n\npublic:\n    RBTree();\n    ~RBTree();\n\n    // 前序遍历"红黑树"\n    void preOrder();\n    // 中序遍历"红黑树"\n    void inOrder();\n    // 后序遍历"红黑树"\n    void postOrder();\n\n    // (递归实现)查找"红黑树"中键值为key的节点\n    RBTNode<T>* search(T key);\n    // (非递归实现)查找"红黑树"中键值为key的节点\n    RBTNode<T>* iterativeSearch(T key);\n\n    // 查找最小结点：返回最小结点的键值。\n    T minimum();\n    // 查找最大结点：返回最大结点的键值。\n    T maximum();\n\n    // 找结点(x)的后继结点。即，查找"红黑树中数据值大于该结点"的"最小结点"。\n    RBTNode<T>* successor(RBTNode<T>* x);\n    // 找结点(x)的前驱结点。即，查找"红黑树中数据值小于该结点"的"最大结点"。\n    RBTNode<T>* predecessor(RBTNode<T>* x);\n\n    // 将结点(key为节点键值)插入到红黑树中\n    void insert(T key);\n\n    // 删除结点(key为节点键值)\n    void remove(T key);\n\n    // 销毁红黑树\n    void destroy();\n\n    // 打印红黑树\n    void print();\nprivate:\n    // 前序遍历"红黑树"\n    void preOrder(RBTNode<T>* tree) const;\n    // 中序遍历"红黑树"\n    void inOrder(RBTNode<T>* tree) const;\n    // 后序遍历"红黑树"\n    void postOrder(RBTNode<T>* tree) const;\n\n    // (递归实现)查找"红黑树x"中键值为key的节点\n    RBTNode<T>* search(RBTNode<T>* x, T key) const;\n    // (非递归实现)查找"红黑树x"中键值为key的节点\n    RBTNode<T>* iterativeSearch(RBTNode<T>* x, T key) const;\n\n    // 查找最小结点：返回tree为根结点的红黑树的最小结点。\n    RBTNode<T>* minimum(RBTNode<T>* tree);\n    // 查找最大结点：返回tree为根结点的红黑树的最大结点。\n    RBTNode<T>* maximum(RBTNode<T>* tree);\n\n    // 左旋\n    void leftRotate(RBTNode<T>*& root, RBTNode<T>* x);\n    // 右旋\n    void rightRotate(RBTNode<T>*& root, RBTNode<T>* y);\n    // 插入函数\n    void insert(RBTNode<T>*& root, RBTNode<T>* node);\n    // 插入修正函数\n    void insertFixUp(RBTNode<T>*& root, RBTNode<T>* node);\n    // 删除函数\n    void remove(RBTNode<T>*& root, RBTNode<T>* node);\n    // 删除修正函数\n    void removeFixUp(RBTNode<T>*& root, RBTNode<T>* node, RBTNode<T>* parent);\n\n    // 销毁红黑树\n    void destroy(RBTNode<T>*& tree);\n\n    // 打印红黑树\n    void print(RBTNode<T>* tree, T key, int direction);\n\n#define rb_parent(r)   ((r)->parent)\n#define rb_color(r) ((r)->color)\n#define rb_is_red(r)   ((r)->color==RED)\n#define rb_is_black(r)  ((r)->color==BLACK)\n#define rb_set_black(r)  do { (r)->color = BLACK; } while (0)\n#define rb_set_red(r)  do { (r)->color = RED; } while (0)\n#define rb_set_parent(r,p)  do { (r)->parent = (p); } while (0)\n#define rb_set_color(r,c)  do { (r)->color = (c); } while (0)\n};\n\n/*\n * 构造函数\n */\ntemplate <class T>\nRBTree<T>::RBTree() :mRoot(NULL)\n{\n    mRoot = NULL;\n}\n\n/*\n * 析构函数\n */\ntemplate <class T>\nRBTree<T>::~RBTree()\n{\n    destroy();\n}\n\n/*\n * 前序遍历"红黑树"\n */\ntemplate <class T>\nvoid RBTree<T>::preOrder(RBTNode<T>* tree) const\n{\n    if (tree != NULL)\n    {\n        cout << tree->key << " ";\n        preOrder(tree->left);\n        preOrder(tree->right);\n    }\n}\n\ntemplate <class T>\nvoid RBTree<T>::preOrder()\n{\n    preOrder(mRoot);\n}\n\n/*\n * 中序遍历"红黑树"\n */\ntemplate <class T>\nvoid RBTree<T>::inOrder(RBTNode<T>* tree) const\n{\n    if (tree != NULL)\n    {\n        inOrder(tree->left);\n        cout << tree->key << " ";\n        inOrder(tree->right);\n    }\n}\n\ntemplate <class T>\nvoid RBTree<T>::inOrder()\n{\n    inOrder(mRoot);\n}\n\n/*\n * 后序遍历"红黑树"\n */\ntemplate <class T>\nvoid RBTree<T>::postOrder(RBTNode<T>* tree) const\n{\n    if (tree != NULL)\n    {\n        postOrder(tree->left);\n        postOrder(tree->right);\n        cout << tree->key << " ";\n    }\n}\n\ntemplate <class T>\nvoid RBTree<T>::postOrder()\n{\n    postOrder(mRoot);\n}\n\n/*\n * (递归实现)查找"红黑树x"中键值为key的节点\n */\ntemplate <class T>\nRBTNode<T>* RBTree<T>::search(RBTNode<T>* x, T key) const\n{\n    if (x == NULL || x->key == key)\n        return x;\n\n    if (key < x->key)\n        return search(x->left, key);\n    else\n        return search(x->right, key);\n}\n\ntemplate <class T>\nRBTNode<T>* RBTree<T>::search(T key)\n{\n    search(mRoot, key);\n}\n\n/*\n * (非递归实现)查找"红黑树x"中键值为key的节点\n */\ntemplate <class T>\nRBTNode<T>* RBTree<T>::iterativeSearch(RBTNode<T>* x, T key) const\n{\n    while ((x != NULL) && (x->key != key))\n    {\n        if (key < x->key)\n            x = x->left;\n        else\n            x = x->right;\n    }\n\n    return x;\n}\n\ntemplate <class T>\nRBTNode<T>* RBTree<T>::iterativeSearch(T key)\n{\n    iterativeSearch(mRoot, key);\n}\n\n/*\n * 查找最小结点：返回tree为根结点的红黑树的最小结点。\n */\ntemplate <class T>\nRBTNode<T>* RBTree<T>::minimum(RBTNode<T>* tree)\n{\n    if (tree == NULL)\n        return NULL;\n\n    while (tree->left != NULL)\n        tree = tree->left;\n    return tree;\n}\n\ntemplate <class T>\nT RBTree<T>::minimum()\n{\n    RBTNode<T>* p = minimum(mRoot);\n    if (p != NULL)\n        return p->key;\n\n    return (T)NULL;\n}\n\n/*\n * 查找最大结点：返回tree为根结点的红黑树的最大结点。\n */\ntemplate <class T>\nRBTNode<T>* RBTree<T>::maximum(RBTNode<T>* tree)\n{\n    if (tree == NULL)\n        return NULL;\n\n    while (tree->right != NULL)\n        tree = tree->right;\n    return tree;\n}\n\ntemplate <class T>\nT RBTree<T>::maximum()\n{\n    RBTNode<T>* p = maximum(mRoot);\n    if (p != NULL)\n        return p->key;\n\n    return (T)NULL;\n}\n\n/*\n * 找结点(x)的后继结点。即，查找"红黑树中数据值大于该结点"的"最小结点"。\n */\ntemplate <class T>\nRBTNode<T>* RBTree<T>::successor(RBTNode<T>* x)\n{\n    // 如果x存在右孩子，则"x的后继结点"为 "以其右孩子为根的子树的最小结点"。\n    if (x->right != NULL)\n        return minimum(x->right);\n\n    // 如果x没有右孩子。则x有以下两种可能：\n    // (01) x是"一个左孩子"，则"x的后继结点"为 "它的父结点"。\n    // (02) x是"一个右孩子"，则查找"x的最低的父结点，并且该父结点要具有左孩子"，找到的这个"最低的父结点"就是"x的后继结点"。\n    RBTNode<T>* y = x->parent;\n    while ((y != NULL) && (x == y->right))\n    {\n        x = y;\n        y = y->parent;\n    }\n\n    return y;\n}\n\n/*\n * 找结点(x)的前驱结点。即，查找"红黑树中数据值小于该结点"的"最大结点"。\n */\ntemplate <class T>\nRBTNode<T>* RBTree<T>::predecessor(RBTNode<T>* x)\n{\n    // 如果x存在左孩子，则"x的前驱结点"为 "以其左孩子为根的子树的最大结点"。\n    if (x->left != NULL)\n        return maximum(x->left);\n\n    // 如果x没有左孩子。则x有以下两种可能：\n    // (01) x是"一个右孩子"，则"x的前驱结点"为 "它的父结点"。\n    // (01) x是"一个左孩子"，则查找"x的最低的父结点，并且该父结点要具有右孩子"，找到的这个"最低的父结点"就是"x的前驱结点"。\n    RBTNode<T>* y = x->parent;\n    while ((y != NULL) && (x == y->left))\n    {\n        x = y;\n        y = y->parent;\n    }\n\n    return y;\n}\n\n/*\n * 对红黑树的节点(x)进行左旋转\n *\n * 左旋示意图(对节点x进行左旋)：\n *      px                              px\n *     /                               /\n *    x                               y\n *   /  \\      --(左旋)--\x3e           / \\                #\n *  lx   y                          x  ry\n *     /   \\                       /  \\\n *    ly   ry                     lx  ly\n *\n *\n */\ntemplate <class T>\nvoid RBTree<T>::leftRotate(RBTNode<T>*& root, RBTNode<T>* x)\n{\n    // 设置x的右孩子为y\n    RBTNode<T>* y = x->right;\n\n    // 将 “y的左孩子” 设为 “x的右孩子”；\n    // 如果y的左孩子非空，将 “x” 设为 “y的左孩子的父亲”\n    x->right = y->left;\n    if (y->left != NULL)\n        y->left->parent = x;\n\n    // 将 “x的父亲” 设为 “y的父亲”\n    y->parent = x->parent;\n\n    if (x->parent == NULL)\n    {\n        root = y;            // 如果 “x的父亲” 是空节点，则将y设为根节点\n    }\n    else\n    {\n        if (x->parent->left == x)\n            x->parent->left = y;    // 如果 x是它父节点的左孩子，则将y设为“x的父节点的左孩子”\n        else\n            x->parent->right = y;    // 如果 x是它父节点的左孩子，则将y设为“x的父节点的左孩子”\n    }\n\n    // 将 “x” 设为 “y的左孩子”\n    y->left = x;\n    // 将 “x的父节点” 设为 “y”\n    x->parent = y;\n}\n\n/*\n * 对红黑树的节点(y)进行右旋转\n *\n * 右旋示意图(对节点y进行左旋)：\n *            py                               py\n *           /                                /\n *          y                                x\n *         /  \\      --(右旋)--\x3e            /  \\                     #\n *        x   ry                           lx   y\n *       / \\                                   / \\                   #\n *      lx  rx                                rx  ry\n *\n */\ntemplate <class T>\nvoid RBTree<T>::rightRotate(RBTNode<T>*& root, RBTNode<T>* y)\n{\n    // 设置x是当前节点的左孩子。\n    RBTNode<T>* x = y->left;\n\n    // 将 “x的右孩子” 设为 “y的左孩子”；\n    // 如果"x的右孩子"不为空的话，将 “y” 设为 “x的右孩子的父亲”\n    y->left = x->right;\n    if (x->right != NULL)\n        x->right->parent = y;\n\n    // 将 “y的父亲” 设为 “x的父亲”\n    x->parent = y->parent;\n\n    if (y->parent == NULL)\n    {\n        root = x;            // 如果 “y的父亲” 是空节点，则将x设为根节点\n    }\n    else\n    {\n        if (y == y->parent->right)\n            y->parent->right = x;    // 如果 y是它父节点的右孩子，则将x设为“y的父节点的右孩子”\n        else\n            y->parent->left = x;    // (y是它父节点的左孩子) 将x设为“x的父节点的左孩子”\n    }\n\n    // 将 “y” 设为 “x的右孩子”\n    x->right = y;\n\n    // 将 “y的父节点” 设为 “x”\n    y->parent = x;\n}\n\n/*\n * 红黑树插入修正函数\n *\n * 在向红黑树中插入节点之后(失去平衡)，再调用该函数；\n * 目的是将它重新塑造成一颗红黑树。\n *\n * 参数说明：\n *     root 红黑树的根\n *     node 插入的结点        // 对应《算法导论》中的z\n */\ntemplate <class T>\nvoid RBTree<T>::insertFixUp(RBTNode<T>*& root, RBTNode<T>* node)\n{\n    RBTNode<T>* parent, * gparent;\n\n    // 若“父节点存在，并且父节点的颜色是红色”\n    while ((parent = rb_parent(node)) && rb_is_red(parent))\n    {\n        gparent = rb_parent(parent);\n\n        //若“父节点”是“祖父节点的左孩子”\n        if (parent == gparent->left)\n        {\n            // Case 1条件：叔叔节点是红色\n            {\n                RBTNode<T>* uncle = gparent->right;\n                if (uncle && rb_is_red(uncle))\n                {\n                    rb_set_black(uncle);\n                    rb_set_black(parent);\n                    rb_set_red(gparent);\n                    node = gparent;\n                    continue;\n                }\n            }\n\n            // Case 2条件：叔叔是黑色，且当前节点是右孩子\n            if (parent->right == node)\n            {\n                RBTNode<T>* tmp;\n                leftRotate(root, parent);\n                tmp = parent;\n                parent = node;\n                node = tmp;\n            }\n\n            // Case 3条件：叔叔是黑色，且当前节点是左孩子。\n            rb_set_black(parent);\n            rb_set_red(gparent);\n            rightRotate(root, gparent);\n        }\n        else//若“z的父节点”是“z的祖父节点的右孩子”\n        {\n            // Case 1条件：叔叔节点是红色\n            {\n                RBTNode<T>* uncle = gparent->left;\n                if (uncle && rb_is_red(uncle))\n                {\n                    rb_set_black(uncle);\n                    rb_set_black(parent);\n                    rb_set_red(gparent);\n                    node = gparent;\n                    continue;\n                }\n            }\n\n            // Case 2条件：叔叔是黑色，且当前节点是左孩子\n            if (parent->left == node)\n            {\n                RBTNode<T>* tmp;\n                rightRotate(root, parent);\n                tmp = parent;\n                parent = node;\n                node = tmp;\n            }\n\n            // Case 3条件：叔叔是黑色，且当前节点是右孩子。\n            rb_set_black(parent);\n            rb_set_red(gparent);\n            leftRotate(root, gparent);\n        }\n    }\n\n    // 将根节点设为黑色\n    rb_set_black(root);\n}\n\n/*\n * 将结点插入到红黑树中\n *\n * 参数说明：\n *     root 红黑树的根结点\n *     node 插入的结点        // 对应《算法导论》中的node\n */\ntemplate <class T>\nvoid RBTree<T>::insert(RBTNode<T>*& root, RBTNode<T>* node)\n{\n    RBTNode<T>* y = NULL;\n    RBTNode<T>* x = root;\n\n    // 1. 将红黑树当作一颗二叉查找树，将节点添加到二叉查找树中。\n    while (x != NULL)\n    {\n        y = x;\n        if (node->key < x->key)\n            x = x->left;\n        else\n            x = x->right;\n    }\n\n    node->parent = y;\n    if (y != NULL)\n    {\n        if (node->key < y->key)\n            y->left = node;\n        else\n            y->right = node;\n    }\n    else\n        root = node;\n\n    // 2. 设置节点的颜色为红色\n    node->color = RED;\n\n    // 3. 将它重新修正为一颗二叉查找树\n    insertFixUp(root, node);\n}\n\n/*\n * 将结点(key为节点键值)插入到红黑树中\n *\n * 参数说明：\n *     tree 红黑树的根结点\n *     key 插入结点的键值\n */\ntemplate <class T>\nvoid RBTree<T>::insert(T key)\n{\n    RBTNode<T>* z = NULL;\n\n    // 如果新建结点失败，则返回。\n    if ((z = new RBTNode<T>(key, BLACK, NULL, NULL, NULL)) == NULL)\n        return;\n\n    insert(mRoot, z);\n}\n\n/*\n * 红黑树删除修正函数\n *\n * 在从红黑树中删除插入节点之后(红黑树失去平衡)，再调用该函数；\n * 目的是将它重新塑造成一颗红黑树。\n *\n * 参数说明：\n *     root 红黑树的根\n *     node 待修正的节点\n */\ntemplate <class T>\nvoid RBTree<T>::removeFixUp(RBTNode<T>*& root, RBTNode<T>* node, RBTNode<T>* parent)\n{\n    RBTNode<T>* other;\n\n    while ((!node || rb_is_black(node)) && node != root)\n    {\n        if (parent->left == node)\n        {\n            other = parent->right;\n            if (rb_is_red(other))\n            {\n                // Case 1: x的兄弟w是红色的\n                rb_set_black(other);\n                rb_set_red(parent);\n                leftRotate(root, parent);\n                other = parent->right;\n            }\n            if ((!other->left || rb_is_black(other->left)) &&\n                (!other->right || rb_is_black(other->right)))\n            {\n                // Case 2: x的兄弟w是黑色，且w的俩个孩子也都是黑色的\n                rb_set_red(other);\n                node = parent;\n                parent = rb_parent(node);\n            }\n            else\n            {\n                if (!other->right || rb_is_black(other->right))\n                {\n                    // Case 3: x的兄弟w是黑色的，并且w的左孩子是红色，右孩子为黑色。\n                    rb_set_black(other->left);\n                    rb_set_red(other);\n                    rightRotate(root, other);\n                    other = parent->right;\n                }\n                // Case 4: x的兄弟w是黑色的；并且w的右孩子是红色的，左孩子任意颜色。\n                rb_set_color(other, rb_color(parent));\n                rb_set_black(parent);\n                rb_set_black(other->right);\n                leftRotate(root, parent);\n                node = root;\n                break;\n            }\n        }\n        else\n        {\n            other = parent->left;\n            if (rb_is_red(other))\n            {\n                // Case 1: x的兄弟w是红色的\n                rb_set_black(other);\n                rb_set_red(parent);\n                rightRotate(root, parent);\n                other = parent->left;\n            }\n            if ((!other->left || rb_is_black(other->left)) &&\n                (!other->right || rb_is_black(other->right)))\n            {\n                // Case 2: x的兄弟w是黑色，且w的俩个孩子也都是黑色的\n                rb_set_red(other);\n                node = parent;\n                parent = rb_parent(node);\n            }\n            else\n            {\n                if (!other->left || rb_is_black(other->left))\n                {\n                    // Case 3: x的兄弟w是黑色的，并且w的左孩子是红色，右孩子为黑色。\n                    rb_set_black(other->right);\n                    rb_set_red(other);\n                    leftRotate(root, other);\n                    other = parent->left;\n                }\n                // Case 4: x的兄弟w是黑色的；并且w的右孩子是红色的，左孩子任意颜色。\n                rb_set_color(other, rb_color(parent));\n                rb_set_black(parent);\n                rb_set_black(other->left);\n                rightRotate(root, parent);\n                node = root;\n                break;\n            }\n        }\n    }\n    if (node)\n        rb_set_black(node);\n}\n\n/*\n * 删除结点(node)，并返回被删除的结点(先delete，再修复)\n *\n * 参数说明：\n *     root 红黑树的根结点\n *     node 删除的结点\n */\ntemplate <class T>\nvoid RBTree<T>::remove(RBTNode<T>*& root, RBTNode<T>* node)\n{\n    RBTNode<T>* child, * parent;\n    RBTColor color;\n\n    // 被删除节点的"左右孩子都不为空"的情况。\n    if ((node->left != NULL) && (node->right != NULL))\n    {\n        // 被删节点的后继节点。(称为"取代节点")\n        // 用它来取代"被删节点"的位置，然后再将"被删节点"去掉。\n        RBTNode<T>* replace = node;\n\n        // 获取后继节点\n        replace = replace->right;\n        while (replace->left != NULL)\n            replace = replace->left;\n\n        // "node节点"不是根节点(只有根节点不存在父节点)\n        if (rb_parent(node))\n        {\n            if (rb_parent(node)->left == node)\n                rb_parent(node)->left = replace;\n            else\n                rb_parent(node)->right = replace;\n        }\n        else\n            // "node节点"是根节点，更新根节点。\n            root = replace;\n\n        // child是"取代节点"的右孩子，也是需要"调整的节点"。\n        // "取代节点"肯定不存在左孩子！因为它是一个后继节点。\n        child = replace->right;\n        parent = rb_parent(replace);\n        // 保存"取代节点"的颜色\n        color = rb_color(replace);\n\n        // "被删除节点"是"它的后继节点的父节点"\n        if (parent == node)\n        {\n            parent = replace;\n        }\n        else\n        {\n            // child不为空\n            if (child)\n                rb_set_parent(child, parent);\n            parent->left = child;\n\n            replace->right = node->right;\n            rb_set_parent(node->right, replace);\n        }\n\n        replace->parent = node->parent;\n        replace->color = node->color;\n        replace->left = node->left;\n        node->left->parent = replace;\n        delete node;\n        \n        if (color == BLACK)\n            removeFixUp(root, child, parent);\n        return;\n    }\n\n    if (node->left != NULL)\n        child = node->left;\n    else\n        child = node->right;\n\n    parent = node->parent;\n    // 保存"取代节点"的颜色\n    color = node->color;\n\n    if (child)\n        child->parent = parent;\n\n    // "node节点"不是根节点\n    if (parent)\n    {\n        if (parent->left == node)\n            parent->left = child;\n        else\n            parent->right = child;\n    }\n    else\n        root = child;\n\n    if (color == BLACK)\n        removeFixUp(root, child, parent);\n    delete node;\n}\n\n/*\n * 删除红黑树中键值为key的节点\n *\n * 参数说明：\n *     tree 红黑树的根结点\n */\ntemplate <class T>\nvoid RBTree<T>::remove(T key)\n{\n    RBTNode<T>* node;\n\n    // 查找key对应的节点(node)，找到的话就删除该节点\n    if ((node = search(mRoot, key)) != NULL)\n        remove(mRoot, node);\n}\n\n/*\n * 销毁红黑树\n */\ntemplate <class T>\nvoid RBTree<T>::destroy(RBTNode<T>*& tree)\n{\n    if (tree == NULL)\n        return;\n\n    if (tree->left != NULL)\n        destroy(tree->left);\n    if (tree->right != NULL)\n        destroy(tree->right);\n\n    delete tree;\n    tree = NULL;\n}\n\ntemplate <class T>\nvoid RBTree<T>::destroy()\n{\n    destroy(mRoot);\n}\n\n/*\n * 打印"二叉查找树"\n *\n * key        -- 节点的键值\n * direction  --  0，表示该节点是根节点;\n *               -1，表示该节点是它的父结点的左孩子;\n *                1，表示该节点是它的父结点的右孩子。\n */\ntemplate <class T>\nvoid RBTree<T>::print(RBTNode<T>* tree, T key, int direction)\n{\n    if (tree != NULL)\n    {\n        if (direction == 0)    // tree是根节点\n            cout << setw(2) << tree->key << "(B) is root" << endl;\n        else                // tree是分支节点\n            cout << setw(2) << tree->key << (rb_is_red(tree) ? "(R)" : "(B)") << " is " << setw(2) << key << "\'s " << setw(12) << (direction == 1 ? "right child" : "left child") << endl;\n\n        print(tree->left, tree->key, -1);\n        print(tree->right, tree->key, 1);\n    }\n}\n\ntemplate <class T>\nvoid RBTree<T>::print()\n{\n    if (mRoot != NULL)\n        print(mRoot, mRoot->key, 0);\n}\n\n#endif\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br"),a("span",{staticClass:"line-number"},[n._v("42")]),a("br"),a("span",{staticClass:"line-number"},[n._v("43")]),a("br"),a("span",{staticClass:"line-number"},[n._v("44")]),a("br"),a("span",{staticClass:"line-number"},[n._v("45")]),a("br"),a("span",{staticClass:"line-number"},[n._v("46")]),a("br"),a("span",{staticClass:"line-number"},[n._v("47")]),a("br"),a("span",{staticClass:"line-number"},[n._v("48")]),a("br"),a("span",{staticClass:"line-number"},[n._v("49")]),a("br"),a("span",{staticClass:"line-number"},[n._v("50")]),a("br"),a("span",{staticClass:"line-number"},[n._v("51")]),a("br"),a("span",{staticClass:"line-number"},[n._v("52")]),a("br"),a("span",{staticClass:"line-number"},[n._v("53")]),a("br"),a("span",{staticClass:"line-number"},[n._v("54")]),a("br"),a("span",{staticClass:"line-number"},[n._v("55")]),a("br"),a("span",{staticClass:"line-number"},[n._v("56")]),a("br"),a("span",{staticClass:"line-number"},[n._v("57")]),a("br"),a("span",{staticClass:"line-number"},[n._v("58")]),a("br"),a("span",{staticClass:"line-number"},[n._v("59")]),a("br"),a("span",{staticClass:"line-number"},[n._v("60")]),a("br"),a("span",{staticClass:"line-number"},[n._v("61")]),a("br"),a("span",{staticClass:"line-number"},[n._v("62")]),a("br"),a("span",{staticClass:"line-number"},[n._v("63")]),a("br"),a("span",{staticClass:"line-number"},[n._v("64")]),a("br"),a("span",{staticClass:"line-number"},[n._v("65")]),a("br"),a("span",{staticClass:"line-number"},[n._v("66")]),a("br"),a("span",{staticClass:"line-number"},[n._v("67")]),a("br"),a("span",{staticClass:"line-number"},[n._v("68")]),a("br"),a("span",{staticClass:"line-number"},[n._v("69")]),a("br"),a("span",{staticClass:"line-number"},[n._v("70")]),a("br"),a("span",{staticClass:"line-number"},[n._v("71")]),a("br"),a("span",{staticClass:"line-number"},[n._v("72")]),a("br"),a("span",{staticClass:"line-number"},[n._v("73")]),a("br"),a("span",{staticClass:"line-number"},[n._v("74")]),a("br"),a("span",{staticClass:"line-number"},[n._v("75")]),a("br"),a("span",{staticClass:"line-number"},[n._v("76")]),a("br"),a("span",{staticClass:"line-number"},[n._v("77")]),a("br"),a("span",{staticClass:"line-number"},[n._v("78")]),a("br"),a("span",{staticClass:"line-number"},[n._v("79")]),a("br"),a("span",{staticClass:"line-number"},[n._v("80")]),a("br"),a("span",{staticClass:"line-number"},[n._v("81")]),a("br"),a("span",{staticClass:"line-number"},[n._v("82")]),a("br"),a("span",{staticClass:"line-number"},[n._v("83")]),a("br"),a("span",{staticClass:"line-number"},[n._v("84")]),a("br"),a("span",{staticClass:"line-number"},[n._v("85")]),a("br"),a("span",{staticClass:"line-number"},[n._v("86")]),a("br"),a("span",{staticClass:"line-number"},[n._v("87")]),a("br"),a("span",{staticClass:"line-number"},[n._v("88")]),a("br"),a("span",{staticClass:"line-number"},[n._v("89")]),a("br"),a("span",{staticClass:"line-number"},[n._v("90")]),a("br"),a("span",{staticClass:"line-number"},[n._v("91")]),a("br"),a("span",{staticClass:"line-number"},[n._v("92")]),a("br"),a("span",{staticClass:"line-number"},[n._v("93")]),a("br"),a("span",{staticClass:"line-number"},[n._v("94")]),a("br"),a("span",{staticClass:"line-number"},[n._v("95")]),a("br"),a("span",{staticClass:"line-number"},[n._v("96")]),a("br"),a("span",{staticClass:"line-number"},[n._v("97")]),a("br"),a("span",{staticClass:"line-number"},[n._v("98")]),a("br"),a("span",{staticClass:"line-number"},[n._v("99")]),a("br"),a("span",{staticClass:"line-number"},[n._v("100")]),a("br"),a("span",{staticClass:"line-number"},[n._v("101")]),a("br"),a("span",{staticClass:"line-number"},[n._v("102")]),a("br"),a("span",{staticClass:"line-number"},[n._v("103")]),a("br"),a("span",{staticClass:"line-number"},[n._v("104")]),a("br"),a("span",{staticClass:"line-number"},[n._v("105")]),a("br"),a("span",{staticClass:"line-number"},[n._v("106")]),a("br"),a("span",{staticClass:"line-number"},[n._v("107")]),a("br"),a("span",{staticClass:"line-number"},[n._v("108")]),a("br"),a("span",{staticClass:"line-number"},[n._v("109")]),a("br"),a("span",{staticClass:"line-number"},[n._v("110")]),a("br"),a("span",{staticClass:"line-number"},[n._v("111")]),a("br"),a("span",{staticClass:"line-number"},[n._v("112")]),a("br"),a("span",{staticClass:"line-number"},[n._v("113")]),a("br"),a("span",{staticClass:"line-number"},[n._v("114")]),a("br"),a("span",{staticClass:"line-number"},[n._v("115")]),a("br"),a("span",{staticClass:"line-number"},[n._v("116")]),a("br"),a("span",{staticClass:"line-number"},[n._v("117")]),a("br"),a("span",{staticClass:"line-number"},[n._v("118")]),a("br"),a("span",{staticClass:"line-number"},[n._v("119")]),a("br"),a("span",{staticClass:"line-number"},[n._v("120")]),a("br"),a("span",{staticClass:"line-number"},[n._v("121")]),a("br"),a("span",{staticClass:"line-number"},[n._v("122")]),a("br"),a("span",{staticClass:"line-number"},[n._v("123")]),a("br"),a("span",{staticClass:"line-number"},[n._v("124")]),a("br"),a("span",{staticClass:"line-number"},[n._v("125")]),a("br"),a("span",{staticClass:"line-number"},[n._v("126")]),a("br"),a("span",{staticClass:"line-number"},[n._v("127")]),a("br"),a("span",{staticClass:"line-number"},[n._v("128")]),a("br"),a("span",{staticClass:"line-number"},[n._v("129")]),a("br"),a("span",{staticClass:"line-number"},[n._v("130")]),a("br"),a("span",{staticClass:"line-number"},[n._v("131")]),a("br"),a("span",{staticClass:"line-number"},[n._v("132")]),a("br"),a("span",{staticClass:"line-number"},[n._v("133")]),a("br"),a("span",{staticClass:"line-number"},[n._v("134")]),a("br"),a("span",{staticClass:"line-number"},[n._v("135")]),a("br"),a("span",{staticClass:"line-number"},[n._v("136")]),a("br"),a("span",{staticClass:"line-number"},[n._v("137")]),a("br"),a("span",{staticClass:"line-number"},[n._v("138")]),a("br"),a("span",{staticClass:"line-number"},[n._v("139")]),a("br"),a("span",{staticClass:"line-number"},[n._v("140")]),a("br"),a("span",{staticClass:"line-number"},[n._v("141")]),a("br"),a("span",{staticClass:"line-number"},[n._v("142")]),a("br"),a("span",{staticClass:"line-number"},[n._v("143")]),a("br"),a("span",{staticClass:"line-number"},[n._v("144")]),a("br"),a("span",{staticClass:"line-number"},[n._v("145")]),a("br"),a("span",{staticClass:"line-number"},[n._v("146")]),a("br"),a("span",{staticClass:"line-number"},[n._v("147")]),a("br"),a("span",{staticClass:"line-number"},[n._v("148")]),a("br"),a("span",{staticClass:"line-number"},[n._v("149")]),a("br"),a("span",{staticClass:"line-number"},[n._v("150")]),a("br"),a("span",{staticClass:"line-number"},[n._v("151")]),a("br"),a("span",{staticClass:"line-number"},[n._v("152")]),a("br"),a("span",{staticClass:"line-number"},[n._v("153")]),a("br"),a("span",{staticClass:"line-number"},[n._v("154")]),a("br"),a("span",{staticClass:"line-number"},[n._v("155")]),a("br"),a("span",{staticClass:"line-number"},[n._v("156")]),a("br"),a("span",{staticClass:"line-number"},[n._v("157")]),a("br"),a("span",{staticClass:"line-number"},[n._v("158")]),a("br"),a("span",{staticClass:"line-number"},[n._v("159")]),a("br"),a("span",{staticClass:"line-number"},[n._v("160")]),a("br"),a("span",{staticClass:"line-number"},[n._v("161")]),a("br"),a("span",{staticClass:"line-number"},[n._v("162")]),a("br"),a("span",{staticClass:"line-number"},[n._v("163")]),a("br"),a("span",{staticClass:"line-number"},[n._v("164")]),a("br"),a("span",{staticClass:"line-number"},[n._v("165")]),a("br"),a("span",{staticClass:"line-number"},[n._v("166")]),a("br"),a("span",{staticClass:"line-number"},[n._v("167")]),a("br"),a("span",{staticClass:"line-number"},[n._v("168")]),a("br"),a("span",{staticClass:"line-number"},[n._v("169")]),a("br"),a("span",{staticClass:"line-number"},[n._v("170")]),a("br"),a("span",{staticClass:"line-number"},[n._v("171")]),a("br"),a("span",{staticClass:"line-number"},[n._v("172")]),a("br"),a("span",{staticClass:"line-number"},[n._v("173")]),a("br"),a("span",{staticClass:"line-number"},[n._v("174")]),a("br"),a("span",{staticClass:"line-number"},[n._v("175")]),a("br"),a("span",{staticClass:"line-number"},[n._v("176")]),a("br"),a("span",{staticClass:"line-number"},[n._v("177")]),a("br"),a("span",{staticClass:"line-number"},[n._v("178")]),a("br"),a("span",{staticClass:"line-number"},[n._v("179")]),a("br"),a("span",{staticClass:"line-number"},[n._v("180")]),a("br"),a("span",{staticClass:"line-number"},[n._v("181")]),a("br"),a("span",{staticClass:"line-number"},[n._v("182")]),a("br"),a("span",{staticClass:"line-number"},[n._v("183")]),a("br"),a("span",{staticClass:"line-number"},[n._v("184")]),a("br"),a("span",{staticClass:"line-number"},[n._v("185")]),a("br"),a("span",{staticClass:"line-number"},[n._v("186")]),a("br"),a("span",{staticClass:"line-number"},[n._v("187")]),a("br"),a("span",{staticClass:"line-number"},[n._v("188")]),a("br"),a("span",{staticClass:"line-number"},[n._v("189")]),a("br"),a("span",{staticClass:"line-number"},[n._v("190")]),a("br"),a("span",{staticClass:"line-number"},[n._v("191")]),a("br"),a("span",{staticClass:"line-number"},[n._v("192")]),a("br"),a("span",{staticClass:"line-number"},[n._v("193")]),a("br"),a("span",{staticClass:"line-number"},[n._v("194")]),a("br"),a("span",{staticClass:"line-number"},[n._v("195")]),a("br"),a("span",{staticClass:"line-number"},[n._v("196")]),a("br"),a("span",{staticClass:"line-number"},[n._v("197")]),a("br"),a("span",{staticClass:"line-number"},[n._v("198")]),a("br"),a("span",{staticClass:"line-number"},[n._v("199")]),a("br"),a("span",{staticClass:"line-number"},[n._v("200")]),a("br"),a("span",{staticClass:"line-number"},[n._v("201")]),a("br"),a("span",{staticClass:"line-number"},[n._v("202")]),a("br"),a("span",{staticClass:"line-number"},[n._v("203")]),a("br"),a("span",{staticClass:"line-number"},[n._v("204")]),a("br"),a("span",{staticClass:"line-number"},[n._v("205")]),a("br"),a("span",{staticClass:"line-number"},[n._v("206")]),a("br"),a("span",{staticClass:"line-number"},[n._v("207")]),a("br"),a("span",{staticClass:"line-number"},[n._v("208")]),a("br"),a("span",{staticClass:"line-number"},[n._v("209")]),a("br"),a("span",{staticClass:"line-number"},[n._v("210")]),a("br"),a("span",{staticClass:"line-number"},[n._v("211")]),a("br"),a("span",{staticClass:"line-number"},[n._v("212")]),a("br"),a("span",{staticClass:"line-number"},[n._v("213")]),a("br"),a("span",{staticClass:"line-number"},[n._v("214")]),a("br"),a("span",{staticClass:"line-number"},[n._v("215")]),a("br"),a("span",{staticClass:"line-number"},[n._v("216")]),a("br"),a("span",{staticClass:"line-number"},[n._v("217")]),a("br"),a("span",{staticClass:"line-number"},[n._v("218")]),a("br"),a("span",{staticClass:"line-number"},[n._v("219")]),a("br"),a("span",{staticClass:"line-number"},[n._v("220")]),a("br"),a("span",{staticClass:"line-number"},[n._v("221")]),a("br"),a("span",{staticClass:"line-number"},[n._v("222")]),a("br"),a("span",{staticClass:"line-number"},[n._v("223")]),a("br"),a("span",{staticClass:"line-number"},[n._v("224")]),a("br"),a("span",{staticClass:"line-number"},[n._v("225")]),a("br"),a("span",{staticClass:"line-number"},[n._v("226")]),a("br"),a("span",{staticClass:"line-number"},[n._v("227")]),a("br"),a("span",{staticClass:"line-number"},[n._v("228")]),a("br"),a("span",{staticClass:"line-number"},[n._v("229")]),a("br"),a("span",{staticClass:"line-number"},[n._v("230")]),a("br"),a("span",{staticClass:"line-number"},[n._v("231")]),a("br"),a("span",{staticClass:"line-number"},[n._v("232")]),a("br"),a("span",{staticClass:"line-number"},[n._v("233")]),a("br"),a("span",{staticClass:"line-number"},[n._v("234")]),a("br"),a("span",{staticClass:"line-number"},[n._v("235")]),a("br"),a("span",{staticClass:"line-number"},[n._v("236")]),a("br"),a("span",{staticClass:"line-number"},[n._v("237")]),a("br"),a("span",{staticClass:"line-number"},[n._v("238")]),a("br"),a("span",{staticClass:"line-number"},[n._v("239")]),a("br"),a("span",{staticClass:"line-number"},[n._v("240")]),a("br"),a("span",{staticClass:"line-number"},[n._v("241")]),a("br"),a("span",{staticClass:"line-number"},[n._v("242")]),a("br"),a("span",{staticClass:"line-number"},[n._v("243")]),a("br"),a("span",{staticClass:"line-number"},[n._v("244")]),a("br"),a("span",{staticClass:"line-number"},[n._v("245")]),a("br"),a("span",{staticClass:"line-number"},[n._v("246")]),a("br"),a("span",{staticClass:"line-number"},[n._v("247")]),a("br"),a("span",{staticClass:"line-number"},[n._v("248")]),a("br"),a("span",{staticClass:"line-number"},[n._v("249")]),a("br"),a("span",{staticClass:"line-number"},[n._v("250")]),a("br"),a("span",{staticClass:"line-number"},[n._v("251")]),a("br"),a("span",{staticClass:"line-number"},[n._v("252")]),a("br"),a("span",{staticClass:"line-number"},[n._v("253")]),a("br"),a("span",{staticClass:"line-number"},[n._v("254")]),a("br"),a("span",{staticClass:"line-number"},[n._v("255")]),a("br"),a("span",{staticClass:"line-number"},[n._v("256")]),a("br"),a("span",{staticClass:"line-number"},[n._v("257")]),a("br"),a("span",{staticClass:"line-number"},[n._v("258")]),a("br"),a("span",{staticClass:"line-number"},[n._v("259")]),a("br"),a("span",{staticClass:"line-number"},[n._v("260")]),a("br"),a("span",{staticClass:"line-number"},[n._v("261")]),a("br"),a("span",{staticClass:"line-number"},[n._v("262")]),a("br"),a("span",{staticClass:"line-number"},[n._v("263")]),a("br"),a("span",{staticClass:"line-number"},[n._v("264")]),a("br"),a("span",{staticClass:"line-number"},[n._v("265")]),a("br"),a("span",{staticClass:"line-number"},[n._v("266")]),a("br"),a("span",{staticClass:"line-number"},[n._v("267")]),a("br"),a("span",{staticClass:"line-number"},[n._v("268")]),a("br"),a("span",{staticClass:"line-number"},[n._v("269")]),a("br"),a("span",{staticClass:"line-number"},[n._v("270")]),a("br"),a("span",{staticClass:"line-number"},[n._v("271")]),a("br"),a("span",{staticClass:"line-number"},[n._v("272")]),a("br"),a("span",{staticClass:"line-number"},[n._v("273")]),a("br"),a("span",{staticClass:"line-number"},[n._v("274")]),a("br"),a("span",{staticClass:"line-number"},[n._v("275")]),a("br"),a("span",{staticClass:"line-number"},[n._v("276")]),a("br"),a("span",{staticClass:"line-number"},[n._v("277")]),a("br"),a("span",{staticClass:"line-number"},[n._v("278")]),a("br"),a("span",{staticClass:"line-number"},[n._v("279")]),a("br"),a("span",{staticClass:"line-number"},[n._v("280")]),a("br"),a("span",{staticClass:"line-number"},[n._v("281")]),a("br"),a("span",{staticClass:"line-number"},[n._v("282")]),a("br"),a("span",{staticClass:"line-number"},[n._v("283")]),a("br"),a("span",{staticClass:"line-number"},[n._v("284")]),a("br"),a("span",{staticClass:"line-number"},[n._v("285")]),a("br"),a("span",{staticClass:"line-number"},[n._v("286")]),a("br"),a("span",{staticClass:"line-number"},[n._v("287")]),a("br"),a("span",{staticClass:"line-number"},[n._v("288")]),a("br"),a("span",{staticClass:"line-number"},[n._v("289")]),a("br"),a("span",{staticClass:"line-number"},[n._v("290")]),a("br"),a("span",{staticClass:"line-number"},[n._v("291")]),a("br"),a("span",{staticClass:"line-number"},[n._v("292")]),a("br"),a("span",{staticClass:"line-number"},[n._v("293")]),a("br"),a("span",{staticClass:"line-number"},[n._v("294")]),a("br"),a("span",{staticClass:"line-number"},[n._v("295")]),a("br"),a("span",{staticClass:"line-number"},[n._v("296")]),a("br"),a("span",{staticClass:"line-number"},[n._v("297")]),a("br"),a("span",{staticClass:"line-number"},[n._v("298")]),a("br"),a("span",{staticClass:"line-number"},[n._v("299")]),a("br"),a("span",{staticClass:"line-number"},[n._v("300")]),a("br"),a("span",{staticClass:"line-number"},[n._v("301")]),a("br"),a("span",{staticClass:"line-number"},[n._v("302")]),a("br"),a("span",{staticClass:"line-number"},[n._v("303")]),a("br"),a("span",{staticClass:"line-number"},[n._v("304")]),a("br"),a("span",{staticClass:"line-number"},[n._v("305")]),a("br"),a("span",{staticClass:"line-number"},[n._v("306")]),a("br"),a("span",{staticClass:"line-number"},[n._v("307")]),a("br"),a("span",{staticClass:"line-number"},[n._v("308")]),a("br"),a("span",{staticClass:"line-number"},[n._v("309")]),a("br"),a("span",{staticClass:"line-number"},[n._v("310")]),a("br"),a("span",{staticClass:"line-number"},[n._v("311")]),a("br"),a("span",{staticClass:"line-number"},[n._v("312")]),a("br"),a("span",{staticClass:"line-number"},[n._v("313")]),a("br"),a("span",{staticClass:"line-number"},[n._v("314")]),a("br"),a("span",{staticClass:"line-number"},[n._v("315")]),a("br"),a("span",{staticClass:"line-number"},[n._v("316")]),a("br"),a("span",{staticClass:"line-number"},[n._v("317")]),a("br"),a("span",{staticClass:"line-number"},[n._v("318")]),a("br"),a("span",{staticClass:"line-number"},[n._v("319")]),a("br"),a("span",{staticClass:"line-number"},[n._v("320")]),a("br"),a("span",{staticClass:"line-number"},[n._v("321")]),a("br"),a("span",{staticClass:"line-number"},[n._v("322")]),a("br"),a("span",{staticClass:"line-number"},[n._v("323")]),a("br"),a("span",{staticClass:"line-number"},[n._v("324")]),a("br"),a("span",{staticClass:"line-number"},[n._v("325")]),a("br"),a("span",{staticClass:"line-number"},[n._v("326")]),a("br"),a("span",{staticClass:"line-number"},[n._v("327")]),a("br"),a("span",{staticClass:"line-number"},[n._v("328")]),a("br"),a("span",{staticClass:"line-number"},[n._v("329")]),a("br"),a("span",{staticClass:"line-number"},[n._v("330")]),a("br"),a("span",{staticClass:"line-number"},[n._v("331")]),a("br"),a("span",{staticClass:"line-number"},[n._v("332")]),a("br"),a("span",{staticClass:"line-number"},[n._v("333")]),a("br"),a("span",{staticClass:"line-number"},[n._v("334")]),a("br"),a("span",{staticClass:"line-number"},[n._v("335")]),a("br"),a("span",{staticClass:"line-number"},[n._v("336")]),a("br"),a("span",{staticClass:"line-number"},[n._v("337")]),a("br"),a("span",{staticClass:"line-number"},[n._v("338")]),a("br"),a("span",{staticClass:"line-number"},[n._v("339")]),a("br"),a("span",{staticClass:"line-number"},[n._v("340")]),a("br"),a("span",{staticClass:"line-number"},[n._v("341")]),a("br"),a("span",{staticClass:"line-number"},[n._v("342")]),a("br"),a("span",{staticClass:"line-number"},[n._v("343")]),a("br"),a("span",{staticClass:"line-number"},[n._v("344")]),a("br"),a("span",{staticClass:"line-number"},[n._v("345")]),a("br"),a("span",{staticClass:"line-number"},[n._v("346")]),a("br"),a("span",{staticClass:"line-number"},[n._v("347")]),a("br"),a("span",{staticClass:"line-number"},[n._v("348")]),a("br"),a("span",{staticClass:"line-number"},[n._v("349")]),a("br"),a("span",{staticClass:"line-number"},[n._v("350")]),a("br"),a("span",{staticClass:"line-number"},[n._v("351")]),a("br"),a("span",{staticClass:"line-number"},[n._v("352")]),a("br"),a("span",{staticClass:"line-number"},[n._v("353")]),a("br"),a("span",{staticClass:"line-number"},[n._v("354")]),a("br"),a("span",{staticClass:"line-number"},[n._v("355")]),a("br"),a("span",{staticClass:"line-number"},[n._v("356")]),a("br"),a("span",{staticClass:"line-number"},[n._v("357")]),a("br"),a("span",{staticClass:"line-number"},[n._v("358")]),a("br"),a("span",{staticClass:"line-number"},[n._v("359")]),a("br"),a("span",{staticClass:"line-number"},[n._v("360")]),a("br"),a("span",{staticClass:"line-number"},[n._v("361")]),a("br"),a("span",{staticClass:"line-number"},[n._v("362")]),a("br"),a("span",{staticClass:"line-number"},[n._v("363")]),a("br"),a("span",{staticClass:"line-number"},[n._v("364")]),a("br"),a("span",{staticClass:"line-number"},[n._v("365")]),a("br"),a("span",{staticClass:"line-number"},[n._v("366")]),a("br"),a("span",{staticClass:"line-number"},[n._v("367")]),a("br"),a("span",{staticClass:"line-number"},[n._v("368")]),a("br"),a("span",{staticClass:"line-number"},[n._v("369")]),a("br"),a("span",{staticClass:"line-number"},[n._v("370")]),a("br"),a("span",{staticClass:"line-number"},[n._v("371")]),a("br"),a("span",{staticClass:"line-number"},[n._v("372")]),a("br"),a("span",{staticClass:"line-number"},[n._v("373")]),a("br"),a("span",{staticClass:"line-number"},[n._v("374")]),a("br"),a("span",{staticClass:"line-number"},[n._v("375")]),a("br"),a("span",{staticClass:"line-number"},[n._v("376")]),a("br"),a("span",{staticClass:"line-number"},[n._v("377")]),a("br"),a("span",{staticClass:"line-number"},[n._v("378")]),a("br"),a("span",{staticClass:"line-number"},[n._v("379")]),a("br"),a("span",{staticClass:"line-number"},[n._v("380")]),a("br"),a("span",{staticClass:"line-number"},[n._v("381")]),a("br"),a("span",{staticClass:"line-number"},[n._v("382")]),a("br"),a("span",{staticClass:"line-number"},[n._v("383")]),a("br"),a("span",{staticClass:"line-number"},[n._v("384")]),a("br"),a("span",{staticClass:"line-number"},[n._v("385")]),a("br"),a("span",{staticClass:"line-number"},[n._v("386")]),a("br"),a("span",{staticClass:"line-number"},[n._v("387")]),a("br"),a("span",{staticClass:"line-number"},[n._v("388")]),a("br"),a("span",{staticClass:"line-number"},[n._v("389")]),a("br"),a("span",{staticClass:"line-number"},[n._v("390")]),a("br"),a("span",{staticClass:"line-number"},[n._v("391")]),a("br"),a("span",{staticClass:"line-number"},[n._v("392")]),a("br"),a("span",{staticClass:"line-number"},[n._v("393")]),a("br"),a("span",{staticClass:"line-number"},[n._v("394")]),a("br"),a("span",{staticClass:"line-number"},[n._v("395")]),a("br"),a("span",{staticClass:"line-number"},[n._v("396")]),a("br"),a("span",{staticClass:"line-number"},[n._v("397")]),a("br"),a("span",{staticClass:"line-number"},[n._v("398")]),a("br"),a("span",{staticClass:"line-number"},[n._v("399")]),a("br"),a("span",{staticClass:"line-number"},[n._v("400")]),a("br"),a("span",{staticClass:"line-number"},[n._v("401")]),a("br"),a("span",{staticClass:"line-number"},[n._v("402")]),a("br"),a("span",{staticClass:"line-number"},[n._v("403")]),a("br"),a("span",{staticClass:"line-number"},[n._v("404")]),a("br"),a("span",{staticClass:"line-number"},[n._v("405")]),a("br"),a("span",{staticClass:"line-number"},[n._v("406")]),a("br"),a("span",{staticClass:"line-number"},[n._v("407")]),a("br"),a("span",{staticClass:"line-number"},[n._v("408")]),a("br"),a("span",{staticClass:"line-number"},[n._v("409")]),a("br"),a("span",{staticClass:"line-number"},[n._v("410")]),a("br"),a("span",{staticClass:"line-number"},[n._v("411")]),a("br"),a("span",{staticClass:"line-number"},[n._v("412")]),a("br"),a("span",{staticClass:"line-number"},[n._v("413")]),a("br"),a("span",{staticClass:"line-number"},[n._v("414")]),a("br"),a("span",{staticClass:"line-number"},[n._v("415")]),a("br"),a("span",{staticClass:"line-number"},[n._v("416")]),a("br"),a("span",{staticClass:"line-number"},[n._v("417")]),a("br"),a("span",{staticClass:"line-number"},[n._v("418")]),a("br"),a("span",{staticClass:"line-number"},[n._v("419")]),a("br"),a("span",{staticClass:"line-number"},[n._v("420")]),a("br"),a("span",{staticClass:"line-number"},[n._v("421")]),a("br"),a("span",{staticClass:"line-number"},[n._v("422")]),a("br"),a("span",{staticClass:"line-number"},[n._v("423")]),a("br"),a("span",{staticClass:"line-number"},[n._v("424")]),a("br"),a("span",{staticClass:"line-number"},[n._v("425")]),a("br"),a("span",{staticClass:"line-number"},[n._v("426")]),a("br"),a("span",{staticClass:"line-number"},[n._v("427")]),a("br"),a("span",{staticClass:"line-number"},[n._v("428")]),a("br"),a("span",{staticClass:"line-number"},[n._v("429")]),a("br"),a("span",{staticClass:"line-number"},[n._v("430")]),a("br"),a("span",{staticClass:"line-number"},[n._v("431")]),a("br"),a("span",{staticClass:"line-number"},[n._v("432")]),a("br"),a("span",{staticClass:"line-number"},[n._v("433")]),a("br"),a("span",{staticClass:"line-number"},[n._v("434")]),a("br"),a("span",{staticClass:"line-number"},[n._v("435")]),a("br"),a("span",{staticClass:"line-number"},[n._v("436")]),a("br"),a("span",{staticClass:"line-number"},[n._v("437")]),a("br"),a("span",{staticClass:"line-number"},[n._v("438")]),a("br"),a("span",{staticClass:"line-number"},[n._v("439")]),a("br"),a("span",{staticClass:"line-number"},[n._v("440")]),a("br"),a("span",{staticClass:"line-number"},[n._v("441")]),a("br"),a("span",{staticClass:"line-number"},[n._v("442")]),a("br"),a("span",{staticClass:"line-number"},[n._v("443")]),a("br"),a("span",{staticClass:"line-number"},[n._v("444")]),a("br"),a("span",{staticClass:"line-number"},[n._v("445")]),a("br"),a("span",{staticClass:"line-number"},[n._v("446")]),a("br"),a("span",{staticClass:"line-number"},[n._v("447")]),a("br"),a("span",{staticClass:"line-number"},[n._v("448")]),a("br"),a("span",{staticClass:"line-number"},[n._v("449")]),a("br"),a("span",{staticClass:"line-number"},[n._v("450")]),a("br"),a("span",{staticClass:"line-number"},[n._v("451")]),a("br"),a("span",{staticClass:"line-number"},[n._v("452")]),a("br"),a("span",{staticClass:"line-number"},[n._v("453")]),a("br"),a("span",{staticClass:"line-number"},[n._v("454")]),a("br"),a("span",{staticClass:"line-number"},[n._v("455")]),a("br"),a("span",{staticClass:"line-number"},[n._v("456")]),a("br"),a("span",{staticClass:"line-number"},[n._v("457")]),a("br"),a("span",{staticClass:"line-number"},[n._v("458")]),a("br"),a("span",{staticClass:"line-number"},[n._v("459")]),a("br"),a("span",{staticClass:"line-number"},[n._v("460")]),a("br"),a("span",{staticClass:"line-number"},[n._v("461")]),a("br"),a("span",{staticClass:"line-number"},[n._v("462")]),a("br"),a("span",{staticClass:"line-number"},[n._v("463")]),a("br"),a("span",{staticClass:"line-number"},[n._v("464")]),a("br"),a("span",{staticClass:"line-number"},[n._v("465")]),a("br"),a("span",{staticClass:"line-number"},[n._v("466")]),a("br"),a("span",{staticClass:"line-number"},[n._v("467")]),a("br"),a("span",{staticClass:"line-number"},[n._v("468")]),a("br"),a("span",{staticClass:"line-number"},[n._v("469")]),a("br"),a("span",{staticClass:"line-number"},[n._v("470")]),a("br"),a("span",{staticClass:"line-number"},[n._v("471")]),a("br"),a("span",{staticClass:"line-number"},[n._v("472")]),a("br"),a("span",{staticClass:"line-number"},[n._v("473")]),a("br"),a("span",{staticClass:"line-number"},[n._v("474")]),a("br"),a("span",{staticClass:"line-number"},[n._v("475")]),a("br"),a("span",{staticClass:"line-number"},[n._v("476")]),a("br"),a("span",{staticClass:"line-number"},[n._v("477")]),a("br"),a("span",{staticClass:"line-number"},[n._v("478")]),a("br"),a("span",{staticClass:"line-number"},[n._v("479")]),a("br"),a("span",{staticClass:"line-number"},[n._v("480")]),a("br"),a("span",{staticClass:"line-number"},[n._v("481")]),a("br"),a("span",{staticClass:"line-number"},[n._v("482")]),a("br"),a("span",{staticClass:"line-number"},[n._v("483")]),a("br"),a("span",{staticClass:"line-number"},[n._v("484")]),a("br"),a("span",{staticClass:"line-number"},[n._v("485")]),a("br"),a("span",{staticClass:"line-number"},[n._v("486")]),a("br"),a("span",{staticClass:"line-number"},[n._v("487")]),a("br"),a("span",{staticClass:"line-number"},[n._v("488")]),a("br"),a("span",{staticClass:"line-number"},[n._v("489")]),a("br"),a("span",{staticClass:"line-number"},[n._v("490")]),a("br"),a("span",{staticClass:"line-number"},[n._v("491")]),a("br"),a("span",{staticClass:"line-number"},[n._v("492")]),a("br"),a("span",{staticClass:"line-number"},[n._v("493")]),a("br"),a("span",{staticClass:"line-number"},[n._v("494")]),a("br"),a("span",{staticClass:"line-number"},[n._v("495")]),a("br"),a("span",{staticClass:"line-number"},[n._v("496")]),a("br"),a("span",{staticClass:"line-number"},[n._v("497")]),a("br"),a("span",{staticClass:"line-number"},[n._v("498")]),a("br"),a("span",{staticClass:"line-number"},[n._v("499")]),a("br"),a("span",{staticClass:"line-number"},[n._v("500")]),a("br"),a("span",{staticClass:"line-number"},[n._v("501")]),a("br"),a("span",{staticClass:"line-number"},[n._v("502")]),a("br"),a("span",{staticClass:"line-number"},[n._v("503")]),a("br"),a("span",{staticClass:"line-number"},[n._v("504")]),a("br"),a("span",{staticClass:"line-number"},[n._v("505")]),a("br"),a("span",{staticClass:"line-number"},[n._v("506")]),a("br"),a("span",{staticClass:"line-number"},[n._v("507")]),a("br"),a("span",{staticClass:"line-number"},[n._v("508")]),a("br"),a("span",{staticClass:"line-number"},[n._v("509")]),a("br"),a("span",{staticClass:"line-number"},[n._v("510")]),a("br"),a("span",{staticClass:"line-number"},[n._v("511")]),a("br"),a("span",{staticClass:"line-number"},[n._v("512")]),a("br"),a("span",{staticClass:"line-number"},[n._v("513")]),a("br"),a("span",{staticClass:"line-number"},[n._v("514")]),a("br"),a("span",{staticClass:"line-number"},[n._v("515")]),a("br"),a("span",{staticClass:"line-number"},[n._v("516")]),a("br"),a("span",{staticClass:"line-number"},[n._v("517")]),a("br"),a("span",{staticClass:"line-number"},[n._v("518")]),a("br"),a("span",{staticClass:"line-number"},[n._v("519")]),a("br"),a("span",{staticClass:"line-number"},[n._v("520")]),a("br"),a("span",{staticClass:"line-number"},[n._v("521")]),a("br"),a("span",{staticClass:"line-number"},[n._v("522")]),a("br"),a("span",{staticClass:"line-number"},[n._v("523")]),a("br"),a("span",{staticClass:"line-number"},[n._v("524")]),a("br"),a("span",{staticClass:"line-number"},[n._v("525")]),a("br"),a("span",{staticClass:"line-number"},[n._v("526")]),a("br"),a("span",{staticClass:"line-number"},[n._v("527")]),a("br"),a("span",{staticClass:"line-number"},[n._v("528")]),a("br"),a("span",{staticClass:"line-number"},[n._v("529")]),a("br"),a("span",{staticClass:"line-number"},[n._v("530")]),a("br"),a("span",{staticClass:"line-number"},[n._v("531")]),a("br"),a("span",{staticClass:"line-number"},[n._v("532")]),a("br"),a("span",{staticClass:"line-number"},[n._v("533")]),a("br"),a("span",{staticClass:"line-number"},[n._v("534")]),a("br"),a("span",{staticClass:"line-number"},[n._v("535")]),a("br"),a("span",{staticClass:"line-number"},[n._v("536")]),a("br"),a("span",{staticClass:"line-number"},[n._v("537")]),a("br"),a("span",{staticClass:"line-number"},[n._v("538")]),a("br"),a("span",{staticClass:"line-number"},[n._v("539")]),a("br"),a("span",{staticClass:"line-number"},[n._v("540")]),a("br"),a("span",{staticClass:"line-number"},[n._v("541")]),a("br"),a("span",{staticClass:"line-number"},[n._v("542")]),a("br"),a("span",{staticClass:"line-number"},[n._v("543")]),a("br"),a("span",{staticClass:"line-number"},[n._v("544")]),a("br"),a("span",{staticClass:"line-number"},[n._v("545")]),a("br"),a("span",{staticClass:"line-number"},[n._v("546")]),a("br"),a("span",{staticClass:"line-number"},[n._v("547")]),a("br"),a("span",{staticClass:"line-number"},[n._v("548")]),a("br"),a("span",{staticClass:"line-number"},[n._v("549")]),a("br"),a("span",{staticClass:"line-number"},[n._v("550")]),a("br"),a("span",{staticClass:"line-number"},[n._v("551")]),a("br"),a("span",{staticClass:"line-number"},[n._v("552")]),a("br"),a("span",{staticClass:"line-number"},[n._v("553")]),a("br"),a("span",{staticClass:"line-number"},[n._v("554")]),a("br"),a("span",{staticClass:"line-number"},[n._v("555")]),a("br"),a("span",{staticClass:"line-number"},[n._v("556")]),a("br"),a("span",{staticClass:"line-number"},[n._v("557")]),a("br"),a("span",{staticClass:"line-number"},[n._v("558")]),a("br"),a("span",{staticClass:"line-number"},[n._v("559")]),a("br"),a("span",{staticClass:"line-number"},[n._v("560")]),a("br"),a("span",{staticClass:"line-number"},[n._v("561")]),a("br"),a("span",{staticClass:"line-number"},[n._v("562")]),a("br"),a("span",{staticClass:"line-number"},[n._v("563")]),a("br"),a("span",{staticClass:"line-number"},[n._v("564")]),a("br"),a("span",{staticClass:"line-number"},[n._v("565")]),a("br"),a("span",{staticClass:"line-number"},[n._v("566")]),a("br"),a("span",{staticClass:"line-number"},[n._v("567")]),a("br"),a("span",{staticClass:"line-number"},[n._v("568")]),a("br"),a("span",{staticClass:"line-number"},[n._v("569")]),a("br"),a("span",{staticClass:"line-number"},[n._v("570")]),a("br"),a("span",{staticClass:"line-number"},[n._v("571")]),a("br"),a("span",{staticClass:"line-number"},[n._v("572")]),a("br"),a("span",{staticClass:"line-number"},[n._v("573")]),a("br"),a("span",{staticClass:"line-number"},[n._v("574")]),a("br"),a("span",{staticClass:"line-number"},[n._v("575")]),a("br"),a("span",{staticClass:"line-number"},[n._v("576")]),a("br"),a("span",{staticClass:"line-number"},[n._v("577")]),a("br"),a("span",{staticClass:"line-number"},[n._v("578")]),a("br"),a("span",{staticClass:"line-number"},[n._v("579")]),a("br"),a("span",{staticClass:"line-number"},[n._v("580")]),a("br"),a("span",{staticClass:"line-number"},[n._v("581")]),a("br"),a("span",{staticClass:"line-number"},[n._v("582")]),a("br"),a("span",{staticClass:"line-number"},[n._v("583")]),a("br"),a("span",{staticClass:"line-number"},[n._v("584")]),a("br"),a("span",{staticClass:"line-number"},[n._v("585")]),a("br"),a("span",{staticClass:"line-number"},[n._v("586")]),a("br"),a("span",{staticClass:"line-number"},[n._v("587")]),a("br"),a("span",{staticClass:"line-number"},[n._v("588")]),a("br"),a("span",{staticClass:"line-number"},[n._v("589")]),a("br"),a("span",{staticClass:"line-number"},[n._v("590")]),a("br"),a("span",{staticClass:"line-number"},[n._v("591")]),a("br"),a("span",{staticClass:"line-number"},[n._v("592")]),a("br"),a("span",{staticClass:"line-number"},[n._v("593")]),a("br"),a("span",{staticClass:"line-number"},[n._v("594")]),a("br"),a("span",{staticClass:"line-number"},[n._v("595")]),a("br"),a("span",{staticClass:"line-number"},[n._v("596")]),a("br"),a("span",{staticClass:"line-number"},[n._v("597")]),a("br"),a("span",{staticClass:"line-number"},[n._v("598")]),a("br"),a("span",{staticClass:"line-number"},[n._v("599")]),a("br"),a("span",{staticClass:"line-number"},[n._v("600")]),a("br"),a("span",{staticClass:"line-number"},[n._v("601")]),a("br"),a("span",{staticClass:"line-number"},[n._v("602")]),a("br"),a("span",{staticClass:"line-number"},[n._v("603")]),a("br"),a("span",{staticClass:"line-number"},[n._v("604")]),a("br"),a("span",{staticClass:"line-number"},[n._v("605")]),a("br"),a("span",{staticClass:"line-number"},[n._v("606")]),a("br"),a("span",{staticClass:"line-number"},[n._v("607")]),a("br"),a("span",{staticClass:"line-number"},[n._v("608")]),a("br"),a("span",{staticClass:"line-number"},[n._v("609")]),a("br"),a("span",{staticClass:"line-number"},[n._v("610")]),a("br"),a("span",{staticClass:"line-number"},[n._v("611")]),a("br"),a("span",{staticClass:"line-number"},[n._v("612")]),a("br"),a("span",{staticClass:"line-number"},[n._v("613")]),a("br"),a("span",{staticClass:"line-number"},[n._v("614")]),a("br"),a("span",{staticClass:"line-number"},[n._v("615")]),a("br"),a("span",{staticClass:"line-number"},[n._v("616")]),a("br"),a("span",{staticClass:"line-number"},[n._v("617")]),a("br"),a("span",{staticClass:"line-number"},[n._v("618")]),a("br"),a("span",{staticClass:"line-number"},[n._v("619")]),a("br"),a("span",{staticClass:"line-number"},[n._v("620")]),a("br"),a("span",{staticClass:"line-number"},[n._v("621")]),a("br"),a("span",{staticClass:"line-number"},[n._v("622")]),a("br"),a("span",{staticClass:"line-number"},[n._v("623")]),a("br"),a("span",{staticClass:"line-number"},[n._v("624")]),a("br"),a("span",{staticClass:"line-number"},[n._v("625")]),a("br"),a("span",{staticClass:"line-number"},[n._v("626")]),a("br"),a("span",{staticClass:"line-number"},[n._v("627")]),a("br"),a("span",{staticClass:"line-number"},[n._v("628")]),a("br"),a("span",{staticClass:"line-number"},[n._v("629")]),a("br"),a("span",{staticClass:"line-number"},[n._v("630")]),a("br"),a("span",{staticClass:"line-number"},[n._v("631")]),a("br"),a("span",{staticClass:"line-number"},[n._v("632")]),a("br"),a("span",{staticClass:"line-number"},[n._v("633")]),a("br"),a("span",{staticClass:"line-number"},[n._v("634")]),a("br"),a("span",{staticClass:"line-number"},[n._v("635")]),a("br"),a("span",{staticClass:"line-number"},[n._v("636")]),a("br"),a("span",{staticClass:"line-number"},[n._v("637")]),a("br"),a("span",{staticClass:"line-number"},[n._v("638")]),a("br"),a("span",{staticClass:"line-number"},[n._v("639")]),a("br"),a("span",{staticClass:"line-number"},[n._v("640")]),a("br"),a("span",{staticClass:"line-number"},[n._v("641")]),a("br"),a("span",{staticClass:"line-number"},[n._v("642")]),a("br"),a("span",{staticClass:"line-number"},[n._v("643")]),a("br"),a("span",{staticClass:"line-number"},[n._v("644")]),a("br"),a("span",{staticClass:"line-number"},[n._v("645")]),a("br"),a("span",{staticClass:"line-number"},[n._v("646")]),a("br"),a("span",{staticClass:"line-number"},[n._v("647")]),a("br"),a("span",{staticClass:"line-number"},[n._v("648")]),a("br"),a("span",{staticClass:"line-number"},[n._v("649")]),a("br"),a("span",{staticClass:"line-number"},[n._v("650")]),a("br"),a("span",{staticClass:"line-number"},[n._v("651")]),a("br"),a("span",{staticClass:"line-number"},[n._v("652")]),a("br"),a("span",{staticClass:"line-number"},[n._v("653")]),a("br"),a("span",{staticClass:"line-number"},[n._v("654")]),a("br"),a("span",{staticClass:"line-number"},[n._v("655")]),a("br"),a("span",{staticClass:"line-number"},[n._v("656")]),a("br"),a("span",{staticClass:"line-number"},[n._v("657")]),a("br"),a("span",{staticClass:"line-number"},[n._v("658")]),a("br"),a("span",{staticClass:"line-number"},[n._v("659")]),a("br"),a("span",{staticClass:"line-number"},[n._v("660")]),a("br"),a("span",{staticClass:"line-number"},[n._v("661")]),a("br"),a("span",{staticClass:"line-number"},[n._v("662")]),a("br"),a("span",{staticClass:"line-number"},[n._v("663")]),a("br"),a("span",{staticClass:"line-number"},[n._v("664")]),a("br"),a("span",{staticClass:"line-number"},[n._v("665")]),a("br"),a("span",{staticClass:"line-number"},[n._v("666")]),a("br"),a("span",{staticClass:"line-number"},[n._v("667")]),a("br"),a("span",{staticClass:"line-number"},[n._v("668")]),a("br"),a("span",{staticClass:"line-number"},[n._v("669")]),a("br"),a("span",{staticClass:"line-number"},[n._v("670")]),a("br"),a("span",{staticClass:"line-number"},[n._v("671")]),a("br"),a("span",{staticClass:"line-number"},[n._v("672")]),a("br"),a("span",{staticClass:"line-number"},[n._v("673")]),a("br"),a("span",{staticClass:"line-number"},[n._v("674")]),a("br"),a("span",{staticClass:"line-number"},[n._v("675")]),a("br"),a("span",{staticClass:"line-number"},[n._v("676")]),a("br"),a("span",{staticClass:"line-number"},[n._v("677")]),a("br"),a("span",{staticClass:"line-number"},[n._v("678")]),a("br"),a("span",{staticClass:"line-number"},[n._v("679")]),a("br"),a("span",{staticClass:"line-number"},[n._v("680")]),a("br"),a("span",{staticClass:"line-number"},[n._v("681")]),a("br"),a("span",{staticClass:"line-number"},[n._v("682")]),a("br"),a("span",{staticClass:"line-number"},[n._v("683")]),a("br"),a("span",{staticClass:"line-number"},[n._v("684")]),a("br"),a("span",{staticClass:"line-number"},[n._v("685")]),a("br"),a("span",{staticClass:"line-number"},[n._v("686")]),a("br"),a("span",{staticClass:"line-number"},[n._v("687")]),a("br"),a("span",{staticClass:"line-number"},[n._v("688")]),a("br"),a("span",{staticClass:"line-number"},[n._v("689")]),a("br"),a("span",{staticClass:"line-number"},[n._v("690")]),a("br"),a("span",{staticClass:"line-number"},[n._v("691")]),a("br"),a("span",{staticClass:"line-number"},[n._v("692")]),a("br"),a("span",{staticClass:"line-number"},[n._v("693")]),a("br"),a("span",{staticClass:"line-number"},[n._v("694")]),a("br"),a("span",{staticClass:"line-number"},[n._v("695")]),a("br"),a("span",{staticClass:"line-number"},[n._v("696")]),a("br"),a("span",{staticClass:"line-number"},[n._v("697")]),a("br"),a("span",{staticClass:"line-number"},[n._v("698")]),a("br"),a("span",{staticClass:"line-number"},[n._v("699")]),a("br"),a("span",{staticClass:"line-number"},[n._v("700")]),a("br"),a("span",{staticClass:"line-number"},[n._v("701")]),a("br"),a("span",{staticClass:"line-number"},[n._v("702")]),a("br"),a("span",{staticClass:"line-number"},[n._v("703")]),a("br"),a("span",{staticClass:"line-number"},[n._v("704")]),a("br"),a("span",{staticClass:"line-number"},[n._v("705")]),a("br"),a("span",{staticClass:"line-number"},[n._v("706")]),a("br"),a("span",{staticClass:"line-number"},[n._v("707")]),a("br"),a("span",{staticClass:"line-number"},[n._v("708")]),a("br"),a("span",{staticClass:"line-number"},[n._v("709")]),a("br"),a("span",{staticClass:"line-number"},[n._v("710")]),a("br"),a("span",{staticClass:"line-number"},[n._v("711")]),a("br"),a("span",{staticClass:"line-number"},[n._v("712")]),a("br"),a("span",{staticClass:"line-number"},[n._v("713")]),a("br"),a("span",{staticClass:"line-number"},[n._v("714")]),a("br"),a("span",{staticClass:"line-number"},[n._v("715")]),a("br"),a("span",{staticClass:"line-number"},[n._v("716")]),a("br"),a("span",{staticClass:"line-number"},[n._v("717")]),a("br"),a("span",{staticClass:"line-number"},[n._v("718")]),a("br"),a("span",{staticClass:"line-number"},[n._v("719")]),a("br"),a("span",{staticClass:"line-number"},[n._v("720")]),a("br"),a("span",{staticClass:"line-number"},[n._v("721")]),a("br"),a("span",{staticClass:"line-number"},[n._v("722")]),a("br"),a("span",{staticClass:"line-number"},[n._v("723")]),a("br"),a("span",{staticClass:"line-number"},[n._v("724")]),a("br"),a("span",{staticClass:"line-number"},[n._v("725")]),a("br"),a("span",{staticClass:"line-number"},[n._v("726")]),a("br"),a("span",{staticClass:"line-number"},[n._v("727")]),a("br"),a("span",{staticClass:"line-number"},[n._v("728")]),a("br"),a("span",{staticClass:"line-number"},[n._v("729")]),a("br"),a("span",{staticClass:"line-number"},[n._v("730")]),a("br"),a("span",{staticClass:"line-number"},[n._v("731")]),a("br"),a("span",{staticClass:"line-number"},[n._v("732")]),a("br"),a("span",{staticClass:"line-number"},[n._v("733")]),a("br"),a("span",{staticClass:"line-number"},[n._v("734")]),a("br"),a("span",{staticClass:"line-number"},[n._v("735")]),a("br"),a("span",{staticClass:"line-number"},[n._v("736")]),a("br"),a("span",{staticClass:"line-number"},[n._v("737")]),a("br"),a("span",{staticClass:"line-number"},[n._v("738")]),a("br"),a("span",{staticClass:"line-number"},[n._v("739")]),a("br"),a("span",{staticClass:"line-number"},[n._v("740")]),a("br"),a("span",{staticClass:"line-number"},[n._v("741")]),a("br"),a("span",{staticClass:"line-number"},[n._v("742")]),a("br"),a("span",{staticClass:"line-number"},[n._v("743")]),a("br"),a("span",{staticClass:"line-number"},[n._v("744")]),a("br"),a("span",{staticClass:"line-number"},[n._v("745")]),a("br"),a("span",{staticClass:"line-number"},[n._v("746")]),a("br"),a("span",{staticClass:"line-number"},[n._v("747")]),a("br"),a("span",{staticClass:"line-number"},[n._v("748")]),a("br"),a("span",{staticClass:"line-number"},[n._v("749")]),a("br"),a("span",{staticClass:"line-number"},[n._v("750")]),a("br"),a("span",{staticClass:"line-number"},[n._v("751")]),a("br"),a("span",{staticClass:"line-number"},[n._v("752")]),a("br"),a("span",{staticClass:"line-number"},[n._v("753")]),a("br"),a("span",{staticClass:"line-number"},[n._v("754")]),a("br"),a("span",{staticClass:"line-number"},[n._v("755")]),a("br"),a("span",{staticClass:"line-number"},[n._v("756")]),a("br"),a("span",{staticClass:"line-number"},[n._v("757")]),a("br"),a("span",{staticClass:"line-number"},[n._v("758")]),a("br"),a("span",{staticClass:"line-number"},[n._v("759")]),a("br"),a("span",{staticClass:"line-number"},[n._v("760")]),a("br"),a("span",{staticClass:"line-number"},[n._v("761")]),a("br"),a("span",{staticClass:"line-number"},[n._v("762")]),a("br"),a("span",{staticClass:"line-number"},[n._v("763")]),a("br"),a("span",{staticClass:"line-number"},[n._v("764")]),a("br"),a("span",{staticClass:"line-number"},[n._v("765")]),a("br"),a("span",{staticClass:"line-number"},[n._v("766")]),a("br"),a("span",{staticClass:"line-number"},[n._v("767")]),a("br"),a("span",{staticClass:"line-number"},[n._v("768")]),a("br"),a("span",{staticClass:"line-number"},[n._v("769")]),a("br"),a("span",{staticClass:"line-number"},[n._v("770")]),a("br"),a("span",{staticClass:"line-number"},[n._v("771")]),a("br"),a("span",{staticClass:"line-number"},[n._v("772")]),a("br"),a("span",{staticClass:"line-number"},[n._v("773")]),a("br"),a("span",{staticClass:"line-number"},[n._v("774")]),a("br"),a("span",{staticClass:"line-number"},[n._v("775")]),a("br"),a("span",{staticClass:"line-number"},[n._v("776")]),a("br"),a("span",{staticClass:"line-number"},[n._v("777")]),a("br"),a("span",{staticClass:"line-number"},[n._v("778")]),a("br"),a("span",{staticClass:"line-number"},[n._v("779")]),a("br"),a("span",{staticClass:"line-number"},[n._v("780")]),a("br"),a("span",{staticClass:"line-number"},[n._v("781")]),a("br"),a("span",{staticClass:"line-number"},[n._v("782")]),a("br"),a("span",{staticClass:"line-number"},[n._v("783")]),a("br"),a("span",{staticClass:"line-number"},[n._v("784")]),a("br"),a("span",{staticClass:"line-number"},[n._v("785")]),a("br"),a("span",{staticClass:"line-number"},[n._v("786")]),a("br"),a("span",{staticClass:"line-number"},[n._v("787")]),a("br"),a("span",{staticClass:"line-number"},[n._v("788")]),a("br"),a("span",{staticClass:"line-number"},[n._v("789")]),a("br"),a("span",{staticClass:"line-number"},[n._v("790")]),a("br"),a("span",{staticClass:"line-number"},[n._v("791")]),a("br"),a("span",{staticClass:"line-number"},[n._v("792")]),a("br"),a("span",{staticClass:"line-number"},[n._v("793")]),a("br"),a("span",{staticClass:"line-number"},[n._v("794")]),a("br"),a("span",{staticClass:"line-number"},[n._v("795")]),a("br"),a("span",{staticClass:"line-number"},[n._v("796")]),a("br"),a("span",{staticClass:"line-number"},[n._v("797")]),a("br"),a("span",{staticClass:"line-number"},[n._v("798")]),a("br"),a("span",{staticClass:"line-number"},[n._v("799")]),a("br"),a("span",{staticClass:"line-number"},[n._v("800")]),a("br"),a("span",{staticClass:"line-number"},[n._v("801")]),a("br"),a("span",{staticClass:"line-number"},[n._v("802")]),a("br"),a("span",{staticClass:"line-number"},[n._v("803")]),a("br"),a("span",{staticClass:"line-number"},[n._v("804")]),a("br"),a("span",{staticClass:"line-number"},[n._v("805")]),a("br"),a("span",{staticClass:"line-number"},[n._v("806")]),a("br"),a("span",{staticClass:"line-number"},[n._v("807")]),a("br"),a("span",{staticClass:"line-number"},[n._v("808")]),a("br"),a("span",{staticClass:"line-number"},[n._v("809")]),a("br"),a("span",{staticClass:"line-number"},[n._v("810")]),a("br"),a("span",{staticClass:"line-number"},[n._v("811")]),a("br"),a("span",{staticClass:"line-number"},[n._v("812")]),a("br"),a("span",{staticClass:"line-number"},[n._v("813")]),a("br"),a("span",{staticClass:"line-number"},[n._v("814")]),a("br"),a("span",{staticClass:"line-number"},[n._v("815")]),a("br"),a("span",{staticClass:"line-number"},[n._v("816")]),a("br"),a("span",{staticClass:"line-number"},[n._v("817")]),a("br"),a("span",{staticClass:"line-number"},[n._v("818")]),a("br"),a("span",{staticClass:"line-number"},[n._v("819")]),a("br"),a("span",{staticClass:"line-number"},[n._v("820")]),a("br"),a("span",{staticClass:"line-number"},[n._v("821")]),a("br"),a("span",{staticClass:"line-number"},[n._v("822")]),a("br"),a("span",{staticClass:"line-number"},[n._v("823")]),a("br"),a("span",{staticClass:"line-number"},[n._v("824")]),a("br"),a("span",{staticClass:"line-number"},[n._v("825")]),a("br"),a("span",{staticClass:"line-number"},[n._v("826")]),a("br"),a("span",{staticClass:"line-number"},[n._v("827")]),a("br"),a("span",{staticClass:"line-number"},[n._v("828")]),a("br"),a("span",{staticClass:"line-number"},[n._v("829")]),a("br"),a("span",{staticClass:"line-number"},[n._v("830")]),a("br"),a("span",{staticClass:"line-number"},[n._v("831")]),a("br"),a("span",{staticClass:"line-number"},[n._v("832")]),a("br"),a("span",{staticClass:"line-number"},[n._v("833")]),a("br"),a("span",{staticClass:"line-number"},[n._v("834")]),a("br"),a("span",{staticClass:"line-number"},[n._v("835")]),a("br"),a("span",{staticClass:"line-number"},[n._v("836")]),a("br"),a("span",{staticClass:"line-number"},[n._v("837")]),a("br"),a("span",{staticClass:"line-number"},[n._v("838")]),a("br"),a("span",{staticClass:"line-number"},[n._v("839")]),a("br"),a("span",{staticClass:"line-number"},[n._v("840")]),a("br"),a("span",{staticClass:"line-number"},[n._v("841")]),a("br"),a("span",{staticClass:"line-number"},[n._v("842")]),a("br"),a("span",{staticClass:"line-number"},[n._v("843")]),a("br"),a("span",{staticClass:"line-number"},[n._v("844")]),a("br"),a("span",{staticClass:"line-number"},[n._v("845")]),a("br"),a("span",{staticClass:"line-number"},[n._v("846")]),a("br"),a("span",{staticClass:"line-number"},[n._v("847")]),a("br")])]),a("div",{staticClass:"language-c++ line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('#include "HashTable.h"\n#include <cmath>\n\n/*\n* brief  创建hash表\n*/\nvoid HashTable::CreateHashTable(int num)\n{\n    int size = GetNextPrimer(num);\n    mMaxSize = size;\n    if (mRoot == nullptr) {\n        mRoot = new Node[size]();\n        for (int i = 0; i < size; ++i) {\n            mRoot[i].mValue = i;\n        }\n    }\n}\n\n/*\n* brief 添加数据\n*/\nvoid HashTable::Insert(int num)\n{\n    int index = HashIndex(num);\n    Node *tmp = mRoot[index].mNextNode;\n    Node* data = new Node;\n    data->mValue = num;\n    mRoot[index].mNextNode = data;\n    data->mNextNode = tmp;\n}\n\n/*\n* brief 判断是否存在\n*/\nbool HashTable::Contains(int num)\n{\n    int index = HashIndex(num);\n    // 这里一定要记得引用,如果不加引用，这里会变成函数内变量，会在函数结束时，析构掉。后边再用到的时候，就崩溃了.\n    Node &node = mRoot[index];\n    Node* tmp = node.mNextNode;\n    while (tmp) {\n        if (num == tmp->mValue) {\n            return true;\n        }\n        tmp = tmp->mNextNode;\n    }\n    return false;\n}\n\n/*\n* brief 判断素数\n*/\nbool HashTable::IsPrimer(int num)\n{\n    // 6x - 1 or 6x + 1\n    if (num == 4 || num == 1) {\n        return false;\n    }\n    for (int i = 5; i < std::sqrt(num); i = i + 6) {\n        if (num % i == 0 || (num + 2) % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/*\n* brief 取得大于num的最小素数\n*/\nint HashTable::GetNextPrimer(int num)\n{\n    int tmp = num % 2 == 0 ? num + 1 : num;\n    while (!IsPrimer(tmp)) {\n        tmp += 2;\n    }\n    return tmp;\n}\n\n/*\n* brief 取得num在链表中的下标\n*/\nint HashTable::HashIndex(int num)\n{\n    return num % mMaxSize;\n}\n\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br"),a("span",{staticClass:"line-number"},[n._v("42")]),a("br"),a("span",{staticClass:"line-number"},[n._v("43")]),a("br"),a("span",{staticClass:"line-number"},[n._v("44")]),a("br"),a("span",{staticClass:"line-number"},[n._v("45")]),a("br"),a("span",{staticClass:"line-number"},[n._v("46")]),a("br"),a("span",{staticClass:"line-number"},[n._v("47")]),a("br"),a("span",{staticClass:"line-number"},[n._v("48")]),a("br"),a("span",{staticClass:"line-number"},[n._v("49")]),a("br"),a("span",{staticClass:"line-number"},[n._v("50")]),a("br"),a("span",{staticClass:"line-number"},[n._v("51")]),a("br"),a("span",{staticClass:"line-number"},[n._v("52")]),a("br"),a("span",{staticClass:"line-number"},[n._v("53")]),a("br"),a("span",{staticClass:"line-number"},[n._v("54")]),a("br"),a("span",{staticClass:"line-number"},[n._v("55")]),a("br"),a("span",{staticClass:"line-number"},[n._v("56")]),a("br"),a("span",{staticClass:"line-number"},[n._v("57")]),a("br"),a("span",{staticClass:"line-number"},[n._v("58")]),a("br"),a("span",{staticClass:"line-number"},[n._v("59")]),a("br"),a("span",{staticClass:"line-number"},[n._v("60")]),a("br"),a("span",{staticClass:"line-number"},[n._v("61")]),a("br"),a("span",{staticClass:"line-number"},[n._v("62")]),a("br"),a("span",{staticClass:"line-number"},[n._v("63")]),a("br"),a("span",{staticClass:"line-number"},[n._v("64")]),a("br"),a("span",{staticClass:"line-number"},[n._v("65")]),a("br"),a("span",{staticClass:"line-number"},[n._v("66")]),a("br"),a("span",{staticClass:"line-number"},[n._v("67")]),a("br"),a("span",{staticClass:"line-number"},[n._v("68")]),a("br"),a("span",{staticClass:"line-number"},[n._v("69")]),a("br"),a("span",{staticClass:"line-number"},[n._v("70")]),a("br"),a("span",{staticClass:"line-number"},[n._v("71")]),a("br"),a("span",{staticClass:"line-number"},[n._v("72")]),a("br"),a("span",{staticClass:"line-number"},[n._v("73")]),a("br"),a("span",{staticClass:"line-number"},[n._v("74")]),a("br"),a("span",{staticClass:"line-number"},[n._v("75")]),a("br"),a("span",{staticClass:"line-number"},[n._v("76")]),a("br"),a("span",{staticClass:"line-number"},[n._v("77")]),a("br"),a("span",{staticClass:"line-number"},[n._v("78")]),a("br"),a("span",{staticClass:"line-number"},[n._v("79")]),a("br"),a("span",{staticClass:"line-number"},[n._v("80")]),a("br"),a("span",{staticClass:"line-number"},[n._v("81")]),a("br"),a("span",{staticClass:"line-number"},[n._v("82")]),a("br"),a("span",{staticClass:"line-number"},[n._v("83")]),a("br"),a("span",{staticClass:"line-number"},[n._v("84")]),a("br"),a("span",{staticClass:"line-number"},[n._v("85")]),a("br"),a("span",{staticClass:"line-number"},[n._v("86")]),a("br")])]),a("div",{staticClass:"language-c++ line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('void RBTTest()\n{\n    int a[] = { 10, 40, 30, 60, 90, 70, 20, 50, 80 };\n    int check_insert = 0;    // "插入"动作的检测开关(0，关闭；1，打开)\n    int check_remove = 0;    // "删除"动作的检测开关(0，关闭；1，打开)\n    int i;\n    int ilen = (sizeof(a)) / (sizeof(a[0]));\n    RBTree<int>* tree = new RBTree<int>();\n\n    cout << "== 原始数据: ";\n    for (i = 0; i < ilen; i++)\n        cout << a[i] << " ";\n    cout << endl;\n\n    for (i = 0; i < ilen; i++)\n    {\n        tree->insert(a[i]);\n        // 设置check_insert=1,测试"添加函数"\n        if (check_insert)\n        {\n            cout << "== 添加节点: " << a[i] << endl;\n            cout << "== 树的详细信息: " << endl;\n            tree->print();\n            cout << endl;\n        }\n\n    }\n\n    cout << "== 前序遍历: ";\n    tree->preOrder();\n\n    cout << "\\n== 中序遍历: ";\n    tree->inOrder();\n\n    cout << "\\n== 后序遍历: ";\n    tree->postOrder();\n    cout << endl;\n\n    cout << "== 最小值: " << tree->minimum() << endl;\n    cout << "== 最大值: " << tree->maximum() << endl;\n    cout << "== 树的详细信息: " << endl;\n    tree->print();\n\n    // 设置check_remove=1,测试"删除函数"\n    if (check_remove)\n    {\n        for (i = 0; i < ilen; i++)\n        {\n            tree->remove(a[i]);\n\n            cout << "== 删除节点: " << a[i] << endl;\n            cout << "== 树的详细信息: " << endl;\n            tree->print();\n            cout << endl;\n        }\n    }\n\n    // 销毁红黑树\n    tree->destroy();\n    delete tree;\n}\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br"),a("span",{staticClass:"line-number"},[n._v("42")]),a("br"),a("span",{staticClass:"line-number"},[n._v("43")]),a("br"),a("span",{staticClass:"line-number"},[n._v("44")]),a("br"),a("span",{staticClass:"line-number"},[n._v("45")]),a("br"),a("span",{staticClass:"line-number"},[n._v("46")]),a("br"),a("span",{staticClass:"line-number"},[n._v("47")]),a("br"),a("span",{staticClass:"line-number"},[n._v("48")]),a("br"),a("span",{staticClass:"line-number"},[n._v("49")]),a("br"),a("span",{staticClass:"line-number"},[n._v("50")]),a("br"),a("span",{staticClass:"line-number"},[n._v("51")]),a("br"),a("span",{staticClass:"line-number"},[n._v("52")]),a("br"),a("span",{staticClass:"line-number"},[n._v("53")]),a("br"),a("span",{staticClass:"line-number"},[n._v("54")]),a("br"),a("span",{staticClass:"line-number"},[n._v("55")]),a("br"),a("span",{staticClass:"line-number"},[n._v("56")]),a("br"),a("span",{staticClass:"line-number"},[n._v("57")]),a("br"),a("span",{staticClass:"line-number"},[n._v("58")]),a("br"),a("span",{staticClass:"line-number"},[n._v("59")]),a("br"),a("span",{staticClass:"line-number"},[n._v("60")]),a("br"),a("span",{staticClass:"line-number"},[n._v("61")]),a("br")])])])}),[],!1,null,null,null);s.default=t.exports}}]);