(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{604:function(t,s,a){"use strict";a.r(s);var e=a(15),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"c-协程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#c-协程"}},[t._v("#")]),t._v(" C#协程")]),t._v(" "),a("p",[t._v("听说C++里面也新出了协程的特性，但是平时还是 用C++11和C++14开发，这个也没有了解过")]),t._v(" "),a("p",[t._v("直接进行一个C#协程的了解")]),t._v(" "),a("h2",{attrs:{id:"简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),a("p",[t._v("给我的感觉是协程是一种特殊的多线程，使用起来比多线程简单，没那么麻烦，但是有多线程的特性，不会阻塞主线程，异步执行函数。")]),t._v(" "),a("p",[t._v("它的作用是在主程序上开启一段协同程序，看起来有点像多线程，但其实它还是运行在主线程之上的。")]),t._v(" "),a("h2",{attrs:{id:"特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特性"}},[t._v("#")]),t._v(" 特性")]),t._v(" "),a("ol",[a("li",[t._v("它有一个特定的返回类型叫做IEnumerator")]),t._v(" "),a("li",[t._v("因为特殊的返回类型所以必须要有返回，但返回不是简单的return而是yield return后面可以是null,可以是WaitForSeconds（等待多少秒），WaitForFixedUpdate（在FixedUpdate每一帧之后），还可以是另外一个协程……")]),t._v(" "),a("li",[t._v(".协程的开启需要用StartCoroutine（里面可以写方法名，也可以直接调用方法），可以用Stop（All）Coroutine来停止")]),t._v(" "),a("li",[t._v("协程不会因为yield return而中断执行，或者执行到一些没有用的代码就返回，它会继续执行到最后")])]),t._v(" "),a("h2",{attrs:{id:"示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),a("div",{staticClass:"language-c# line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('\n    void Start()\n    {\n        StartCoroutine(Test01());\n        //StartCoroutine("Test01");\n    }\n \n    IEnumerator Test01(){\n        Debug.Log("协同");\n        yield return new WaitForSeconds(2f);\n        Debug.Log("程序");\n        yield return null;\n        Debug.Log("继续运行");\n    }\n')])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/25e9716559e5484982ce848ac6359914.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5LiN5aaC44CB5rWB5rWq,size_20,color_FFFFFF,t_70,g_se,x_16",alt:"img"}})]),t._v(" "),a("p",[t._v("打印了“协同”后过了两秒才打印“程序”，而且即使后面是yield return null 它也继续执行了。")]),t._v(" "),a("p",[t._v("协程可以用来作为优化的一种手段，比如游戏中一些需要不断更新但又不需要像Update这么频繁的时候。")])])}),[],!1,null,null,null);s.default=n.exports}}]);