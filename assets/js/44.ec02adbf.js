(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{621:function(e,t,n){"use strict";n.r(t);var s=n(15),i=Object(s.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"qtreeview-delegate-中item显示"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#qtreeview-delegate-中item显示"}},[e._v("#")]),e._v(" qtreeview delegate 中item显示")]),e._v(" "),n("p",[e._v("有时候qtreeview的一个item的文字长度很长时，一般Qt都会缩略他，比如“suncaiyusuncaiyusuncaiyusuncaiyusuncaiyusuncaiyu”会根据策略比如Qt::ElideRight缩成“suncai...”这种。\n如果我就是想把它全部显示出来，有两种模式：")]),e._v(" "),n("h2",{attrs:{id:"_1-显示在一行上-全部显示"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-显示在一行上-全部显示"}},[e._v("#")]),e._v(" 1.显示在一行上，全部显示")]),e._v(" "),n("h3",{attrs:{id:"_1-第一个办法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-第一个办法"}},[e._v("#")]),e._v(" 1.第一个办法")]),e._v(" "),n("p",[e._v("此时Qt有一个方法，叫")]),e._v(" "),n("blockquote",[n("p",[e._v("[slot] void QTreeView::resizeColumnToContents(int column)\nResizes the column given to the size of its contents.\nSee also columnWidth(), setColumnWidth(), sizeHintForColumn(), and QHeaderView::resizeContentsPrecision().\n他会自动帮你计算。\n但是需要注意的是。\nresizeColumnToContents有两个相关属性")])]),e._v(" "),n("ol",[n("li",[e._v("enum QHeaderView::ResizeMode\n列表头的resize模式有一个QHeaderView::ResizeToContents跟随内容一个调整")]),e._v(" "),n("li",[e._v("void QHeaderView::setResizeContentsPrecision(int precision)\n调整精度：有点抽象，表示resizeColumnToContents作用的行数。因为treeview有很多行的，precision参数表示作用多少行。比如默认1000 他就会调整1000行，后面的就不管了。特殊值-1表示作用全部行。但是如果有很多数据，这回很耗时间。特殊值0表示值作用当前可见的区域，但这就以为这你要多次刷新，调用resizeColumnToContents。")])]),e._v(" "),n("h3",{attrs:{id:"_2-第二个办法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-第二个办法"}},[e._v("#")]),e._v(" 2.第二个办法")]),e._v(" "),n("p",[e._v("自己计算。\n其实一行的宽度是根据QTreeview的QHeadView决定的\n我们可以在sizeHint中，获取到index对应的font，以及显示的数据，用QFontMertricx计算显示这行数据需要多长的宽度，然后QHeadView::resizeSection()设置header的宽度。（具体没有多测试，可能会有一些小问题，可以看着解决）")]),e._v(" "),n("h2",{attrs:{id:"_2-分行显示-根据header的宽度-自动调整行高度-以便显示全部文字"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-分行显示-根据header的宽度-自动调整行高度-以便显示全部文字"}},[e._v("#")]),e._v(" 2. 分行显示，根据header的宽度，自动调整行高度，以便显示全部文字")]),e._v(" "),n("p",[e._v("虽然QTreeView中有一个叫WordWrap的属性，但是设置后发现，没有啥用。而且官方说明里也写了，他并不对全部列管用。(好用只对主列有用)\n那就只能自己想办法。还是参考上面第二种办法。首先设置")]),e._v(" "),n("blockquote",[n("p",[e._v("void  setUniformRowHeights(bool uniform)")])]),e._v(" "),n("p",[e._v("为false，因为我们不能保证所有行高度一致。\n还是在delegate的sizehint中获取header的对应宽度")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("int wordWidth = fm.width(str); // 显示需要的宽度\nint lineCount = wordWidth / headerWidth; // 如果换行，需要多少行\nif (wordWidth % heaferWidth > 0) {\n  lineCount++;\n}\nQSize sz;\nsz.setHeight(lineCount * fm.height() + (lineCount + 1) * fm.lineSpacing));\nreturn sz;\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br")])]),n("p",[e._v("同时在delegete中的painter函数中，自己paint一下")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("if (index.column() == 你需要绘制的那行) {\n  painter.drawText(option.rect, Qt::TextWrapAnywhere | Qt::AlignVCenter, index.data(Qt::DisplayRole).value<QString>());\n}\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br")])]),n("p",[e._v("如果想要两边留点距离可以option.rect.adjusted(5, 0, 0, -5),当然，在sizeHint计算lineCount的术后需要吧对应的 10像素减去。")]),e._v(" "),n("p",[e._v("但是还有一个最重要的点，当你拖动调整header()的宽度的时候，他是不会变化的，因为没有通知它更新。理论上在delegate中，所有的size变化，都需要发送一个系统的sizeHintChanged(QModelIndex())信号。\n或者调用一个偏门的函数 doItemsLayout();")])])}),[],!1,null,null,null);t.default=i.exports}}]);